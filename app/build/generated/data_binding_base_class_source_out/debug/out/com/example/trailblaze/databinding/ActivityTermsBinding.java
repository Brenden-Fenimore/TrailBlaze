// Generated by view binder compiler. Do not edit!
package com.example.trailblaze.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.trailblaze.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTermsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout LinearColumnterms;

  @NonNull
  public final TextView Review;

  @NonNull
  public final TextView msgTermsandco2;

  @NonNull
  public final TextView msgTermsandco3;

  @NonNull
  public final Button termsOKbtn;

  @NonNull
  public final TextView termsandco;

  @NonNull
  public final TextView termsandconditions;

  private ActivityTermsBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout LinearColumnterms, @NonNull TextView Review,
      @NonNull TextView msgTermsandco2, @NonNull TextView msgTermsandco3,
      @NonNull Button termsOKbtn, @NonNull TextView termsandco,
      @NonNull TextView termsandconditions) {
    this.rootView = rootView;
    this.LinearColumnterms = LinearColumnterms;
    this.Review = Review;
    this.msgTermsandco2 = msgTermsandco2;
    this.msgTermsandco3 = msgTermsandco3;
    this.termsOKbtn = termsOKbtn;
    this.termsandco = termsandco;
    this.termsandconditions = termsandconditions;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTermsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTermsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_terms, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTermsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.LinearColumnterms;
      LinearLayout LinearColumnterms = ViewBindings.findChildViewById(rootView, id);
      if (LinearColumnterms == null) {
        break missingId;
      }

      id = R.id.Review;
      TextView Review = ViewBindings.findChildViewById(rootView, id);
      if (Review == null) {
        break missingId;
      }

      id = R.id.msg_termsandco2;
      TextView msgTermsandco2 = ViewBindings.findChildViewById(rootView, id);
      if (msgTermsandco2 == null) {
        break missingId;
      }

      id = R.id.msg_termsandco3;
      TextView msgTermsandco3 = ViewBindings.findChildViewById(rootView, id);
      if (msgTermsandco3 == null) {
        break missingId;
      }

      id = R.id.termsOKbtn;
      Button termsOKbtn = ViewBindings.findChildViewById(rootView, id);
      if (termsOKbtn == null) {
        break missingId;
      }

      id = R.id.termsandco;
      TextView termsandco = ViewBindings.findChildViewById(rootView, id);
      if (termsandco == null) {
        break missingId;
      }

      id = R.id.termsandconditions;
      TextView termsandconditions = ViewBindings.findChildViewById(rootView, id);
      if (termsandconditions == null) {
        break missingId;
      }

      return new ActivityTermsBinding((LinearLayout) rootView, LinearColumnterms, Review,
          msgTermsandco2, msgTermsandco3, termsOKbtn, termsandco, termsandconditions);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
