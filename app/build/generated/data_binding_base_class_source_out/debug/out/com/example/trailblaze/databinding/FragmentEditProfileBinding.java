// Generated by view binder compiler. Do not edit!
package com.example.trailblaze.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.SeekBar;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.trailblaze.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentEditProfileBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView accountTitle;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final ImageView cameraIcon;

  @NonNull
  public final TextView editDifficulty;

  @NonNull
  public final EditText editDob;

  @NonNull
  public final EditText editEmail;

  @NonNull
  public final TextView editFitness;

  @NonNull
  public final EditText editLocation;

  @NonNull
  public final EditText editPhone;

  @NonNull
  public final TextView editTerrain;

  @NonNull
  public final TextView editTypeOfHike;

  @NonNull
  public final EditText editUsername;

  @NonNull
  public final Switch favoritetrailsSwitch;

  @NonNull
  public final Switch leaderboardSwitch;

  @NonNull
  public final Switch photosSwitch;

  @NonNull
  public final ImageView profileImage;

  @NonNull
  public final FrameLayout profileImageContainer;

  @NonNull
  public final Switch sharelocationSwitch;

  @NonNull
  public final SeekBar suggestedTrailsSeekbar;

  @NonNull
  public final TextView suggestedTrailsValue;

  @NonNull
  public final Button updateProfileButton;

  @NonNull
  public final Switch watcherSwitch;

  private FragmentEditProfileBinding(@NonNull ScrollView rootView, @NonNull TextView accountTitle,
      @NonNull ImageButton backButton, @NonNull ImageView cameraIcon,
      @NonNull TextView editDifficulty, @NonNull EditText editDob, @NonNull EditText editEmail,
      @NonNull TextView editFitness, @NonNull EditText editLocation, @NonNull EditText editPhone,
      @NonNull TextView editTerrain, @NonNull TextView editTypeOfHike,
      @NonNull EditText editUsername, @NonNull Switch favoritetrailsSwitch,
      @NonNull Switch leaderboardSwitch, @NonNull Switch photosSwitch,
      @NonNull ImageView profileImage, @NonNull FrameLayout profileImageContainer,
      @NonNull Switch sharelocationSwitch, @NonNull SeekBar suggestedTrailsSeekbar,
      @NonNull TextView suggestedTrailsValue, @NonNull Button updateProfileButton,
      @NonNull Switch watcherSwitch) {
    this.rootView = rootView;
    this.accountTitle = accountTitle;
    this.backButton = backButton;
    this.cameraIcon = cameraIcon;
    this.editDifficulty = editDifficulty;
    this.editDob = editDob;
    this.editEmail = editEmail;
    this.editFitness = editFitness;
    this.editLocation = editLocation;
    this.editPhone = editPhone;
    this.editTerrain = editTerrain;
    this.editTypeOfHike = editTypeOfHike;
    this.editUsername = editUsername;
    this.favoritetrailsSwitch = favoritetrailsSwitch;
    this.leaderboardSwitch = leaderboardSwitch;
    this.photosSwitch = photosSwitch;
    this.profileImage = profileImage;
    this.profileImageContainer = profileImageContainer;
    this.sharelocationSwitch = sharelocationSwitch;
    this.suggestedTrailsSeekbar = suggestedTrailsSeekbar;
    this.suggestedTrailsValue = suggestedTrailsValue;
    this.updateProfileButton = updateProfileButton;
    this.watcherSwitch = watcherSwitch;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentEditProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEditProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_edit_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEditProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.account_title;
      TextView accountTitle = ViewBindings.findChildViewById(rootView, id);
      if (accountTitle == null) {
        break missingId;
      }

      id = R.id.backButton;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.camera_icon;
      ImageView cameraIcon = ViewBindings.findChildViewById(rootView, id);
      if (cameraIcon == null) {
        break missingId;
      }

      id = R.id.edit_difficulty;
      TextView editDifficulty = ViewBindings.findChildViewById(rootView, id);
      if (editDifficulty == null) {
        break missingId;
      }

      id = R.id.edit_dob;
      EditText editDob = ViewBindings.findChildViewById(rootView, id);
      if (editDob == null) {
        break missingId;
      }

      id = R.id.edit_email;
      EditText editEmail = ViewBindings.findChildViewById(rootView, id);
      if (editEmail == null) {
        break missingId;
      }

      id = R.id.edit_fitness;
      TextView editFitness = ViewBindings.findChildViewById(rootView, id);
      if (editFitness == null) {
        break missingId;
      }

      id = R.id.edit_location;
      EditText editLocation = ViewBindings.findChildViewById(rootView, id);
      if (editLocation == null) {
        break missingId;
      }

      id = R.id.edit_phone;
      EditText editPhone = ViewBindings.findChildViewById(rootView, id);
      if (editPhone == null) {
        break missingId;
      }

      id = R.id.edit_terrain;
      TextView editTerrain = ViewBindings.findChildViewById(rootView, id);
      if (editTerrain == null) {
        break missingId;
      }

      id = R.id.edit_type_Of_Hike;
      TextView editTypeOfHike = ViewBindings.findChildViewById(rootView, id);
      if (editTypeOfHike == null) {
        break missingId;
      }

      id = R.id.edit_username;
      EditText editUsername = ViewBindings.findChildViewById(rootView, id);
      if (editUsername == null) {
        break missingId;
      }

      id = R.id.favoritetrails_switch;
      Switch favoritetrailsSwitch = ViewBindings.findChildViewById(rootView, id);
      if (favoritetrailsSwitch == null) {
        break missingId;
      }

      id = R.id.leaderboard_switch;
      Switch leaderboardSwitch = ViewBindings.findChildViewById(rootView, id);
      if (leaderboardSwitch == null) {
        break missingId;
      }

      id = R.id.photos_switch;
      Switch photosSwitch = ViewBindings.findChildViewById(rootView, id);
      if (photosSwitch == null) {
        break missingId;
      }

      id = R.id.profile_image;
      ImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.profile_image_container;
      FrameLayout profileImageContainer = ViewBindings.findChildViewById(rootView, id);
      if (profileImageContainer == null) {
        break missingId;
      }

      id = R.id.sharelocation_switch;
      Switch sharelocationSwitch = ViewBindings.findChildViewById(rootView, id);
      if (sharelocationSwitch == null) {
        break missingId;
      }

      id = R.id.suggested_trails_seekbar;
      SeekBar suggestedTrailsSeekbar = ViewBindings.findChildViewById(rootView, id);
      if (suggestedTrailsSeekbar == null) {
        break missingId;
      }

      id = R.id.suggested_trails_value;
      TextView suggestedTrailsValue = ViewBindings.findChildViewById(rootView, id);
      if (suggestedTrailsValue == null) {
        break missingId;
      }

      id = R.id.update_profile_button;
      Button updateProfileButton = ViewBindings.findChildViewById(rootView, id);
      if (updateProfileButton == null) {
        break missingId;
      }

      id = R.id.watcher_switch;
      Switch watcherSwitch = ViewBindings.findChildViewById(rootView, id);
      if (watcherSwitch == null) {
        break missingId;
      }

      return new FragmentEditProfileBinding((ScrollView) rootView, accountTitle, backButton,
          cameraIcon, editDifficulty, editDob, editEmail, editFitness, editLocation, editPhone,
          editTerrain, editTypeOfHike, editUsername, favoritetrailsSwitch, leaderboardSwitch,
          photosSwitch, profileImage, profileImageContainer, sharelocationSwitch,
          suggestedTrailsSeekbar, suggestedTrailsValue, updateProfileButton, watcherSwitch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
